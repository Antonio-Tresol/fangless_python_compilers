
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'inputAMPERSAND AMPERSAND_EQUAL AND BAR BAR_EQUAL BINARY_NUMBER BREAK CLASS COLON COMMA CONTINUE DEDENT DEF DOT DOUBLE_SLASH DOUBLE_SLASH_EQUAL DOUBLE_STAR DOUBLE_STAR_EQUAL ELIF ELSE END_TOKEN EQUAL EQUAL_EQUAL EXCLAMATION FALSE FLOATING_NUMBER FOR GREATER_EQUAL GREATER_THAN HAT HAT_EQUAL HEXADECIMAL_NUMBER IF IN INDENT INTEGER_NUMBER LEFT_SHIFT LEFT_SHIFT_EQUAL LESS_EQUAL LESS_THAN L_BRACKET L_CURLY_BRACE L_PARENTHESIS MINUS MINUS_EQUAL MOD MOD_EQUAL NAME NEWLINE NOT NOTEQUAL OCTAL_NUMBER OR PASS PLUS PLUS_EQUAL RANGE RAW_STRING RETURN RIGHT_SHIFT RIGHT_SHIFT_EQUAL R_BRACKET R_CURLY_BRACE R_PARENTHESIS SEMICOLON SLASH SLASH_EQUAL STAR START_TOKEN STAR_EQUAL STRING TILDE TRIPLE_STRING TRUE UNICODE_STRING WHILE WHITESPACEinput    :   START_TOKEN END_TOKEN'
    
_lr_action_items = {'START_TOKEN':([0,],[2,]),'$end':([1,3,],[0,-1,]),'END_TOKEN':([2,],[3,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'input':([0,],[1,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> input","S'",1,None,None,None),
  ('input -> START_TOKEN END_TOKEN','input',2,'p_input','parser.py',9),
]
